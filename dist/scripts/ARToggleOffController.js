"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = "module.exports = (world) => {\n  // Module is always available\n  // var surface = Module.getSurface();\n  // var scene = surface.getScene();\n  // TODO: Discuss with Walid supported JS feature in CherryG\n  var inspectorData = {\n    configurations: [],\n  };\n  var onClick = function(node, object, meshid, button, x, y) {\n      \n      if (Module.getARWrapper) {\n          var arWrapper = Module.getARWrapper();\n          arWrapper.onPause();\n          world.resetAnchors();\n          world.GlobalProps.state = \"main\";\n          \n          Module.controls.rotateEnabled = true;\n          Module.controls.zoomEnabled = true;\n          Module.controls.panEnabled = true;\n          \n          for (const x in inspectorData.configurations){\n              const cfg = inspectorData.configurations[x];\n              const node = Module.ProjectManager.getObject(cfg.file)\n              node.visible = cfg.toggled;\n          }\n      }\n      return true;\n  }\n  return Object.assign({\n      onClick,\n      _setInspectorData : (data)=> { inspectorData = data; },\n      _inspector: ()=>{\n          // format options in order\n          let op_Configuration = {\n              label: \"Configuration\",\n              field: \"configurations\",\n              type: \"file\",\n              header: \"Configurations\",\n              description: \"Drop Configurations\",\n              allowed: [\"configuration\"],\n              list: true,\n              toggle: true,\n              value: {file:\"\", toggled: true}\n          }\n          return [op_Configuration];\n      }\n  })   \n}      \n";
